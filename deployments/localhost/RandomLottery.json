{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "lottery__NotEnoughEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lottery__notEnoughLotterytime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lottery__notEnoughToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lottery__notOpen",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lottery__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "lottery__notnewBie",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lotteryCounter",
          "type": "uint256"
        }
      ],
      "name": "RequestedLotteryWinner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "counterNo",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "participants",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "enterlottery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "counterNo",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "minplayers",
          "type": "uint256"
        }
      ],
      "name": "lotteryAnnounceMent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lotteryCounter",
          "type": "uint256"
        }
      ],
      "name": "winnerPicked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lotteryCounter",
          "type": "uint256"
        }
      ],
      "name": "checkThings",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lotteryCounter",
          "type": "uint256"
        }
      ],
      "name": "enterLottery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeTokenToeth",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lotteryCounter",
          "type": "uint256"
        }
      ],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLotteryCompletionTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lotteryCounter",
          "type": "uint256"
        }
      ],
      "name": "getRemainingTime",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getYourStreak",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "loginManagement1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_timeInterval",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_entranceFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minplayers",
          "type": "uint256"
        }
      ],
      "name": "lotteryStart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lotteryCounter",
          "type": "uint256"
        }
      ],
      "name": "makeThingsWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newBieBonus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerCashout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x26688c4a5bcb935c070ee71222d35ac779c03400da1bd7538afaadb881e6197a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1928315",
    "logsBloom": "0x
    "blockHash": "0xea9f713635cfcef3f13b070dced73216fbf5c49aac58dda9637bec730b016020",
    "transactionHash": "0x26688c4a5bcb935c070ee71222d35ac779c03400da1bd7538afaadb881e6197a",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1928315",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f4905e32b213996537b7003b613215a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"lottery__NotEnoughEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lottery__notEnoughLotterytime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lottery__notEnoughToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lottery__notOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lottery__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"lottery__notnewBie\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lotteryCounter\",\"type\":\"uint256\"}],\"name\":\"RequestedLotteryWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"counterNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participants\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"enterlottery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"counterNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"minplayers\",\"type\":\"uint256\"}],\"name\":\"lotteryAnnounceMent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lotteryCounter\",\"type\":\"uint256\"}],\"name\":\"winnerPicked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lotteryCounter\",\"type\":\"uint256\"}],\"name\":\"checkThings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lotteryCounter\",\"type\":\"uint256\"}],\"name\":\"enterLottery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeTokenToeth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lotteryCounter\",\"type\":\"uint256\"}],\"name\":\"getEntranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryCompletionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lotteryCounter\",\"type\":\"uint256\"}],\"name\":\"getRemainingTime\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getYourStreak\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loginManagement1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_timeInterval\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minplayers\",\"type\":\"uint256\"}],\"name\":\"lotteryStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lotteryCounter\",\"type\":\"uint256\"}],\"name\":\"makeThingsWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newBieBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerCashout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"helloiampratyus\",\"kind\":\"dev\",\"methods\":{},\"title\":\"a sample lottery contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"this contract is for creating  untamperable decentralized smart contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lottery.sol\":\"RandomLottery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lottery.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.7;\\nerror lottery__NotEnoughEth();\\nerror Lottery_TransferFailed();\\nerror lottery__notOpen();\\nerror  lottery__notEnoughToken();\\nerror lottery__notnewBie();\\nerror lottery__newBie();\\nerror lottery__notEnoughLotterytime();\\nerror lottery__notOwner();\\n/**\\n * @title a sample lottery contract\\n * @author helloiampratyus\\n * @notice this contract is for creating  untamperable decentralized smart contract\\n */\\n\\n//one of the player should be paid\\n\\ncontract RandomLottery {\\n    address private randomAddress;\\n    enum lotteryState {\\n        OPEN,\\n        COSED\\n    }\\n    struct lotteryThings\\n    {\\n         uint256 s_entranceFee;\\n         uint256 s_latestTimeStamp;\\n         uint256 s_interval;\\n         lotteryState s_lotteryState;\\n         uint256 MinPlayers;\\n    }\\n    struct login{\\n        uint256 streak;\\n        uint256 s_lastTimeStamp;\\n        uint256 check_reset;\\n    }\\n\\n    // uint256 0=OPEN,uint256 1=CALCULATING\\n    //state variable\\n    uint256 private lotteryCounter=1;\\n    uint256 private lotteryCompletionOwnerTime=0;\\n \\n    //lottery variable\\n    address payable i_owner;\\n    address private s_recentWinner;\\n   mapping (uint256=>uint256) private WinnerIndex;\\n   mapping(uint256=>lotteryThings) private lotteryMap;\\n   mapping(uint256=>address payable[] ) private  s_players;\\n   mapping(address=>uint256) private tokenBalance;\\n   mapping(address=>login) private loginManagement;\\n    //events\\n    event lotteryAnnounceMent(uint256 counterNo,uint256 timeStamp,uint256 endTime,uint256 indexed minplayers);\\n    event enterlottery(uint256 counterNo,address participants,uint256 time);\\n    event RequestedLotteryWinner(uint256 indexed requestId,uint256 lotteryCounter);\\n       event winnerPicked(address indexed winner,uint256 lotteryCounter);\\n   \\n    //consructor\\n    constructor(){\\n        i_owner=payable(msg.sender);\\n    }\\n \\n         \\n       function lotteryStart(uint16 _timeInterval,uint256 _entranceFee,uint256 _minplayers) public \\n       {\\n        if(msg.sender!=i_owner)\\n\\n        {\\n            revert lottery__notOwner();\\n        }\\n       lotteryMap[lotteryCounter]=lotteryThings(_entranceFee,block.timestamp,_timeInterval,lotteryState.OPEN,_minplayers);\\n     \\n       emit lotteryAnnounceMent(lotteryCounter, block.timestamp, block.timestamp+_timeInterval,_minplayers);\\n\\n         lotteryCounter+=1;\\n\\n       }\\n    function enterLottery(uint256 _lotteryCounter) public payable {\\n        if (msg.value < lotteryMap[_lotteryCounter].s_entranceFee) {\\n            revert lottery__NotEnoughEth();\\n        }\\n        if (lotteryMap[_lotteryCounter].s_lotteryState != lotteryState.OPEN) {\\n            revert lottery__notOpen();\\n        }\\n       if(block.timestamp>lotteryMap[_lotteryCounter].s_latestTimeStamp+lotteryMap[_lotteryCounter].s_interval){\\n        revert lottery__notOpen();\\n       }\\n        s_players[_lotteryCounter].push(payable(msg.sender));\\n        randomAddress=msg.sender;\\n     \\n        emit enterlottery(_lotteryCounter, msg.sender, block.timestamp);\\n    }\\n//condition checking variable\\n   function checkThings(uint256 _lotteryCounter) public view returns(bool) \\n   {\\n    bool isDeadinePassed=(block.timestamp>=(lotteryMap[_lotteryCounter].s_latestTimeStamp+lotteryMap[_lotteryCounter].s_interval));\\n    bool isPlayerAll=(s_players[_lotteryCounter].length>=lotteryMap[_lotteryCounter].MinPlayers);\\n    bool res=(isDeadinePassed&&isPlayerAll);\\n    return res;\\n    \\n   }\\n    //winnerPicking\\n\\n        function makeThingsWinner(uint256 _lotteryCounter) public  {\\n           \\n            require(checkThings(_lotteryCounter)==true,\\\"you cant enter here\\\");\\n             uint256 indexofWinner;\\n           if(checkThings(_lotteryCounter)){\\n            indexofWinner=uint256(keccak256(abi.encodePacked(randomAddress,_lotteryCounter,block.timestamp,s_players[_lotteryCounter].length)))%(s_players[_lotteryCounter].length);  \\n              \\n           }\\n           address payable recentWinner= payable (s_players[_lotteryCounter][indexofWinner]);\\n             uint256 amount=(4*(s_players[_lotteryCounter].length)*(lotteryMap[_lotteryCounter].s_entranceFee))/5;\\n             (bool success, ) = recentWinner.call{value: amount}(\\\"\\\");\\n             require(success,\\\"transaction Failed\\\");\\n             lotteryMap[_lotteryCounter].s_lotteryState=lotteryState.COSED;\\n             //token distribution\\n            for(uint256 i=0;i<=s_players[_lotteryCounter].length;i++){\\n                address participants=s_players[_lotteryCounter][i];\\n                tokenBalance[participants]+=4;\\n\\n             }\\n             lotteryCompletionOwnerTime+=1;\\n        }\\n           //token exchanging\\nfunction exchangeTokenToeth() public returns(bool){\\n    if(getTokenBalance()<100){\\n        revert lottery__notEnoughToken();\\n    }\\n    require(address(this).balance>=0.1*1e18,\\\"can not exchange now,low contract balance \\\");\\n      tokenBalance[msg.sender]-=100;\\n      (bool success,)=(msg.sender).call{value:0.1*1e18}(\\\"\\\");\\n      require(success,\\\"transaction Failed\\\");\\n      return true;\\n      }\\n    function newBieBonus() public {\\n    \\n        if(loginManagement[msg.sender].check_reset==0){\\n            loginManagement[msg.sender]=login(1,block.timestamp,1);\\n            tokenBalance[msg.sender]+=5;\\n\\n        }\\n        else {\\n                revert lottery__notnewBie(); \\n        }\\n    }\\n    //login token distribution\\n    function loginManagement1() public {\\n          require(loginManagement[msg.sender].check_reset>0,\\\"you are new bie\\\");\\n          require((block.timestamp)-(loginManagement[msg.sender].s_lastTimeStamp)>=(24*3600),\\\"not 24 hours past\\\");\\n           if(block.timestamp-(loginManagement[msg.sender].s_lastTimeStamp)>(2*24*3600)){\\n                       loginManagement[msg.sender].streak=1;\\n                       loginManagement[msg.sender].check_reset+=1;\\n                       loginManagement[msg.sender].s_lastTimeStamp=block.timestamp;\\n                       tokenBalance[msg.sender]+=1;\\n           }\\n           else {\\n            uint256 streakDay=loginManagement[msg.sender].streak;\\n                 if(streakDay>=1&&streakDay<6){\\n                     loginManagement[msg.sender].streak+=1;\\n                       loginManagement[msg.sender].check_reset+=1;\\n                       loginManagement[msg.sender].s_lastTimeStamp=block.timestamp;\\n                       tokenBalance[msg.sender]+=1;\\n                 }\\n                 else{\\n                     loginManagement[msg.sender].streak+=1;\\n                       loginManagement[msg.sender].check_reset+=1;\\n                       loginManagement[msg.sender].s_lastTimeStamp=block.timestamp;\\n                       tokenBalance[msg.sender]+=2;\\n                 }\\n           }\\n    }\\n    //owner cashout\\n    function ownerCashout() public {\\n        require(msg.sender==i_owner,\\\"you are not eligible for commercial fund\\\");\\n       \\n        if(lotteryCompletionOwnerTime>10){\\n             require(address(this).balance>=0.8*1e18,\\\"sorry you can not cash out now,low balance\\\");\\n                         lotteryCompletionOwnerTime-=10;\\n        (bool success,)= i_owner.call{value:0.8*1e18}(\\\"\\\");\\n      require(success,\\\"transaction failed\\\");\\n      \\n        }\\n        else {\\n            revert lottery__notEnoughLotterytime();\\n        }       \\n    }\\n    //some getter\\n    function getRemainingTime(uint256 _lotteryCounter) public view returns(int256){\\n        \\n     int256 time=int((lotteryMap[_lotteryCounter].s_latestTimeStamp+lotteryMap[_lotteryCounter].s_interval)-block.timestamp);\\n     if(time>0){\\n    return time;\\n     }\\n     else{\\n        return 10000000;\\n     }\\n        \\n    }\\n   function getYourStreak() public view returns(uint256){\\n    return(loginManagement[msg.sender].streak);\\n   }\\n\\n    function getEntranceFee(uint256 _lotteryCounter) public view returns (uint256) {\\n        return lotteryMap[_lotteryCounter].s_entranceFee;\\n    }\\n           \\n    function getTokenBalance() public view returns(uint256){\\n        return (tokenBalance[msg.sender]);\\n    }\\n    function getLotteryCompletionTime() public view returns(uint256){\\n        require(msg.sender==i_owner,\\\"owner access only\\\");\\n        return lotteryCompletionOwnerTime;\\n    }\\n    \\n}\",\"keccak256\":\"0x547a6c31b6b67b0afebd1161d36a500940181284c972ebf003d41c549062d631\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260018055600060025534801561001957600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061213b8061006a6000396000f3fe6080604052600436106100c25760003560e01c80634253b85e1161007f5780638731c630116100595780638731c630146102495780639d5055fa14610286578063c4b9b4581461029d578063e54d079f146102b4576100c2565b80634253b85e146101ca5780637385359c146101f557806382b2e2571461021e576100c2565b806308fea0f4146100c7578063181e0124146100f257806318c5aa9c1461012f5780632dc2eade1461015a5780633522ae7e146101715780633fd43098146101ae575b600080fd5b3480156100d357600080fd5b506100dc6102dd565b6040516100e9919061174f565b60405180910390f35b3480156100fe57600080fd5b506101196004803603810190610114919061179b565b610377565b60405161012691906117e1565b60405180910390f35b34801561013b57600080fd5b506101446103de565b604051610151919061174f565b60405180910390f35b34801561016657600080fd5b5061016f610428565b005b34801561017d57600080fd5b506101986004803603810190610193919061179b565b6109e8565b6040516101a59190611817565b60405180910390f35b6101c860048036038101906101c3919061179b565b610a75565b005b3480156101d657600080fd5b506101df610ca9565b6040516101ec9190611817565b60405180910390f35b34801561020157600080fd5b5061021c6004803603810190610217919061186c565b610e4b565b005b34801561022a57600080fd5b50610233610fea565b604051610240919061174f565b60405180910390f35b34801561025557600080fd5b50610270600480360381019061026b919061179b565b611031565b60405161027d919061174f565b60405180910390f35b34801561029257600080fd5b5061029b611051565b005b3480156102a957600080fd5b506102b26111a9565b005b3480156102c057600080fd5b506102db60048036038101906102d6919061179b565b6113b9565b005b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103669061191c565b60405180910390fd5b600254905090565b60008042600660008581526020019081526020016000206002015460066000868152602001908152602001600020600101546103b3919061196b565b6103bd91906119c1565b905060008113156103d157809150506103d9565b629896809150505b919050565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154116104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490611a41565b60405180910390fd5b62015180600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426104ff91906119c1565b1015610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790611aad565b60405180910390fd5b6202a300600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261059291906119c1565b11156106dd576001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610633919061196b565b9250508190555042600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106d1919061196b565b925050819055506109e6565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600181101580156107355750600681105b15610891576001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461078d919061196b565b925050819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546107e7919061196b565b9250508190555042600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610885919061196b565b925050819055506109e4565b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546108e4919061196b565b925050819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825461093e919061196b565b9250508190555042600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506002600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109dc919061196b565b925050819055505b505b565b60008060066000848152602001908152602001600020600201546006600085815260200190815260200160002060010154610a23919061196b565b4210159050600060066000858152602001908152602001600020600401546007600086815260200190815260200160002080549050101590506000828015610a685750815b9050809350505050919050565b6006600082815260200190815260200160002060000154341015610ac5576040517ffacecd8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001811115610ad957610ad8611acd565b5b6006600083815260200190815260200160002060030160009054906101000a900460ff166001811115610b0f57610b0e611acd565b5b14610b46576040517f2d16e31800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60066000828152602001908152602001600020600201546006600083815260200190815260200160002060010154610b7e919061196b565b421115610bb7576040517f2d16e31800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60076000828152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff03cb32da4fad5aeaa1cbe49b45f9a6f53cfc46d401650778a26f36d1d3fd3ef813342604051610c9e93929190611b3d565b60405180910390a150565b60006064610cb5610fea565b1015610ced576040517fc1c6515400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67016345785d8a0000471015610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611be6565b60405180910390fd5b6064600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d8891906119c1565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1667016345785d8a0000604051610dbd90611c37565b60006040518083038185875af1925050503d8060008114610dfa576040519150601f19603f3d011682016040523d82523d6000602084013e610dff565b606091505b5050905080610e43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3a90611c98565b60405180910390fd5b600191505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ed2576040517fb0eaf04000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052808381526020014281526020018461ffff16815260200160006001811115610f0757610f06611acd565b5b81526020018281525060066000600154815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690836001811115610f6e57610f6d611acd565b5b021790555060808201518160040155905050807ecaeaef7e5d285d4135870eee906f7ac2c65708a8a212bc906d7d150c7f4fa5600154428661ffff1642610fb5919061196b565b604051610fc493929190611cb8565b60405180910390a26001806000828254610fde919061196b565b92505081905550505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600060066000838152602001908152602001600020600001549050919050565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541415611175576040518060600160405280600181526020014281526020016001815250600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050506005600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611169919061196b565b925050819055506111a7565b6040517fc98248a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123090611d61565b60405180910390fd5b600a600254111561138557670b1a2bc2ec50000047101561128f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128690611df3565b60405180910390fd5b600a600260008282546112a291906119c1565b925050819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16670b1a2bc2ec5000006040516112f990611c37565b60006040518083038185875af1925050503d8060008114611336576040519150601f19603f3d011682016040523d82523d6000602084013e61133b565b606091505b505090508061137f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137690611e5f565b60405180910390fd5b506113b7565b6040517ff0123e7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600115156113c6826109e8565b151514611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff90611ecb565b60405180910390fd5b6000611413826109e8565b156114a257600760008381526020019081526020016000208054905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168342600760008781526020019081526020016000208054905060405160200161147c9493929190611f54565b6040516020818303038152906040528051906020012060001c61149f9190611fd1565b90505b60006007600084815260200190815260200160002082815481106114c9576114c8612002565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060056006600086815260200190815260200160002060000154600760008781526020019081526020016000208054905060046115349190612031565b61153e9190612031565b611548919061208b565b905060008273ffffffffffffffffffffffffffffffffffffffff168260405161157090611c37565b60006040518083038185875af1925050503d80600081146115ad576040519150601f19603f3d011682016040523d82523d6000602084013e6115b2565b606091505b50509050806115f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ed90611c98565b60405180910390fd5b60016006600087815260200190815260200160002060030160006101000a81548160ff021916908360018111156116305761162f611acd565b5b021790555060005b6007600087815260200190815260200160002080549050811161171457600060076000888152602001908152602001600020828154811061167c5761167b612002565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506004600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116f9919061196b565b9250508190555050808061170c906120bc565b915050611638565b50600160026000828254611728919061196b565b925050819055505050505050565b6000819050919050565b61174981611736565b82525050565b60006020820190506117646000830184611740565b92915050565b600080fd5b61177881611736565b811461178357600080fd5b50565b6000813590506117958161176f565b92915050565b6000602082840312156117b1576117b061176a565b5b60006117bf84828501611786565b91505092915050565b6000819050919050565b6117db816117c8565b82525050565b60006020820190506117f660008301846117d2565b92915050565b60008115159050919050565b611811816117fc565b82525050565b600060208201905061182c6000830184611808565b92915050565b600061ffff82169050919050565b61184981611832565b811461185457600080fd5b50565b60008135905061186681611840565b92915050565b6000806000606084860312156118855761188461176a565b5b600061189386828701611857565b93505060206118a486828701611786565b92505060406118b586828701611786565b9150509250925092565b600082825260208201905092915050565b7f6f776e657220616363657373206f6e6c79000000000000000000000000000000600082015250565b60006119066011836118bf565b9150611911826118d0565b602082019050919050565b60006020820190508181036000830152611935816118f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061197682611736565b915061198183611736565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119b6576119b561193c565b5b828201905092915050565b60006119cc82611736565b91506119d783611736565b9250828210156119ea576119e961193c565b5b828203905092915050565b7f796f7520617265206e6577206269650000000000000000000000000000000000600082015250565b6000611a2b600f836118bf565b9150611a36826119f5565b602082019050919050565b60006020820190508181036000830152611a5a81611a1e565b9050919050565b7f6e6f7420323420686f7572732070617374000000000000000000000000000000600082015250565b6000611a976011836118bf565b9150611aa282611a61565b602082019050919050565b60006020820190508181036000830152611ac681611a8a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b2782611afc565b9050919050565b611b3781611b1c565b82525050565b6000606082019050611b526000830186611740565b611b5f6020830185611b2e565b611b6c6040830184611740565b949350505050565b7f63616e206e6f742065786368616e6765206e6f772c6c6f7720636f6e7472616360008201527f742062616c616e63652000000000000000000000000000000000000000000000602082015250565b6000611bd0602a836118bf565b9150611bdb82611b74565b604082019050919050565b60006020820190508181036000830152611bff81611bc3565b9050919050565b600081905092915050565b50565b6000611c21600083611c06565b9150611c2c82611c11565b600082019050919050565b6000611c4282611c14565b9150819050919050565b7f7472616e73616374696f6e204661696c65640000000000000000000000000000600082015250565b6000611c826012836118bf565b9150611c8d82611c4c565b602082019050919050565b60006020820190508181036000830152611cb181611c75565b9050919050565b6000606082019050611ccd6000830186611740565b611cda6020830185611740565b611ce76040830184611740565b949350505050565b7f796f7520617265206e6f7420656c696769626c6520666f7220636f6d6d65726360008201527f69616c2066756e64000000000000000000000000000000000000000000000000602082015250565b6000611d4b6028836118bf565b9150611d5682611cef565b604082019050919050565b60006020820190508181036000830152611d7a81611d3e565b9050919050565b7f736f72727920796f752063616e206e6f742063617368206f7574206e6f772c6c60008201527f6f772062616c616e636500000000000000000000000000000000000000000000602082015250565b6000611ddd602a836118bf565b9150611de882611d81565b604082019050919050565b60006020820190508181036000830152611e0c81611dd0565b9050919050565b7f7472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b6000611e496012836118bf565b9150611e5482611e13565b602082019050919050565b60006020820190508181036000830152611e7881611e3c565b9050919050565b7f796f752063616e7420656e746572206865726500000000000000000000000000600082015250565b6000611eb56013836118bf565b9150611ec082611e7f565b602082019050919050565b60006020820190508181036000830152611ee481611ea8565b9050919050565b60008160601b9050919050565b6000611f0382611eeb565b9050919050565b6000611f1582611ef8565b9050919050565b611f2d611f2882611b1c565b611f0a565b82525050565b6000819050919050565b611f4e611f4982611736565b611f33565b82525050565b6000611f608287611f1c565b601482019150611f708286611f3d565b602082019150611f808285611f3d565b602082019150611f908284611f3d565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fdc82611736565b9150611fe783611736565b925082611ff757611ff6611fa2565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061203c82611736565b915061204783611736565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120805761207f61193c565b5b828202905092915050565b600061209682611736565b91506120a183611736565b9250826120b1576120b0611fa2565b5b828204905092915050565b60006120c782611736565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156120fa576120f961193c565b5b60018201905091905056fea2646970667358221220fe7006bbd4afc6bdb0bcd025b0db59e02541a7858162d8fa7854f2a0f68a012764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80634253b85e1161007f5780638731c630116100595780638731c630146102495780639d5055fa14610286578063c4b9b4581461029d578063e54d079f146102b4576100c2565b80634253b85e146101ca5780637385359c146101f557806382b2e2571461021e576100c2565b806308fea0f4146100c7578063181e0124146100f257806318c5aa9c1461012f5780632dc2eade1461015a5780633522ae7e146101715780633fd43098146101ae575b600080fd5b3480156100d357600080fd5b506100dc6102dd565b6040516100e9919061174f565b60405180910390f35b3480156100fe57600080fd5b506101196004803603810190610114919061179b565b610377565b60405161012691906117e1565b60405180910390f35b34801561013b57600080fd5b506101446103de565b604051610151919061174f565b60405180910390f35b34801561016657600080fd5b5061016f610428565b005b34801561017d57600080fd5b506101986004803603810190610193919061179b565b6109e8565b6040516101a59190611817565b60405180910390f35b6101c860048036038101906101c3919061179b565b610a75565b005b3480156101d657600080fd5b506101df610ca9565b6040516101ec9190611817565b60405180910390f35b34801561020157600080fd5b5061021c6004803603810190610217919061186c565b610e4b565b005b34801561022a57600080fd5b50610233610fea565b604051610240919061174f565b60405180910390f35b34801561025557600080fd5b50610270600480360381019061026b919061179b565b611031565b60405161027d919061174f565b60405180910390f35b34801561029257600080fd5b5061029b611051565b005b3480156102a957600080fd5b506102b26111a9565b005b3480156102c057600080fd5b506102db60048036038101906102d6919061179b565b6113b9565b005b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103669061191c565b60405180910390fd5b600254905090565b60008042600660008581526020019081526020016000206002015460066000868152602001908152602001600020600101546103b3919061196b565b6103bd91906119c1565b905060008113156103d157809150506103d9565b629896809150505b919050565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154116104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490611a41565b60405180910390fd5b62015180600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426104ff91906119c1565b1015610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790611aad565b60405180910390fd5b6202a300600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261059291906119c1565b11156106dd576001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610633919061196b565b9250508190555042600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106d1919061196b565b925050819055506109e6565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600181101580156107355750600681105b15610891576001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461078d919061196b565b925050819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546107e7919061196b565b9250508190555042600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610885919061196b565b925050819055506109e4565b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546108e4919061196b565b925050819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825461093e919061196b565b9250508190555042600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506002600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109dc919061196b565b925050819055505b505b565b60008060066000848152602001908152602001600020600201546006600085815260200190815260200160002060010154610a23919061196b565b4210159050600060066000858152602001908152602001600020600401546007600086815260200190815260200160002080549050101590506000828015610a685750815b9050809350505050919050565b6006600082815260200190815260200160002060000154341015610ac5576040517ffacecd8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001811115610ad957610ad8611acd565b5b6006600083815260200190815260200160002060030160009054906101000a900460ff166001811115610b0f57610b0e611acd565b5b14610b46576040517f2d16e31800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60066000828152602001908152602001600020600201546006600083815260200190815260200160002060010154610b7e919061196b565b421115610bb7576040517f2d16e31800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60076000828152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff03cb32da4fad5aeaa1cbe49b45f9a6f53cfc46d401650778a26f36d1d3fd3ef813342604051610c9e93929190611b3d565b60405180910390a150565b60006064610cb5610fea565b1015610ced576040517fc1c6515400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67016345785d8a0000471015610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611be6565b60405180910390fd5b6064600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d8891906119c1565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1667016345785d8a0000604051610dbd90611c37565b60006040518083038185875af1925050503d8060008114610dfa576040519150601f19603f3d011682016040523d82523d6000602084013e610dff565b606091505b5050905080610e43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3a90611c98565b60405180910390fd5b600191505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ed2576040517fb0eaf04000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052808381526020014281526020018461ffff16815260200160006001811115610f0757610f06611acd565b5b81526020018281525060066000600154815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690836001811115610f6e57610f6d611acd565b5b021790555060808201518160040155905050807ecaeaef7e5d285d4135870eee906f7ac2c65708a8a212bc906d7d150c7f4fa5600154428661ffff1642610fb5919061196b565b604051610fc493929190611cb8565b60405180910390a26001806000828254610fde919061196b565b92505081905550505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600060066000838152602001908152602001600020600001549050919050565b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541415611175576040518060600160405280600181526020014281526020016001815250600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050506005600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611169919061196b565b925050819055506111a7565b6040517fc98248a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611239576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123090611d61565b60405180910390fd5b600a600254111561138557670b1a2bc2ec50000047101561128f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128690611df3565b60405180910390fd5b600a600260008282546112a291906119c1565b925050819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16670b1a2bc2ec5000006040516112f990611c37565b60006040518083038185875af1925050503d8060008114611336576040519150601f19603f3d011682016040523d82523d6000602084013e61133b565b606091505b505090508061137f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137690611e5f565b60405180910390fd5b506113b7565b6040517ff0123e7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600115156113c6826109e8565b151514611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff90611ecb565b60405180910390fd5b6000611413826109e8565b156114a257600760008381526020019081526020016000208054905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168342600760008781526020019081526020016000208054905060405160200161147c9493929190611f54565b6040516020818303038152906040528051906020012060001c61149f9190611fd1565b90505b60006007600084815260200190815260200160002082815481106114c9576114c8612002565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600060056006600086815260200190815260200160002060000154600760008781526020019081526020016000208054905060046115349190612031565b61153e9190612031565b611548919061208b565b905060008273ffffffffffffffffffffffffffffffffffffffff168260405161157090611c37565b60006040518083038185875af1925050503d80600081146115ad576040519150601f19603f3d011682016040523d82523d6000602084013e6115b2565b606091505b50509050806115f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ed90611c98565b60405180910390fd5b60016006600087815260200190815260200160002060030160006101000a81548160ff021916908360018111156116305761162f611acd565b5b021790555060005b6007600087815260200190815260200160002080549050811161171457600060076000888152602001908152602001600020828154811061167c5761167b612002565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506004600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116f9919061196b565b9250508190555050808061170c906120bc565b915050611638565b50600160026000828254611728919061196b565b925050819055505050505050565b6000819050919050565b61174981611736565b82525050565b60006020820190506117646000830184611740565b92915050565b600080fd5b61177881611736565b811461178357600080fd5b50565b6000813590506117958161176f565b92915050565b6000602082840312156117b1576117b061176a565b5b60006117bf84828501611786565b91505092915050565b6000819050919050565b6117db816117c8565b82525050565b60006020820190506117f660008301846117d2565b92915050565b60008115159050919050565b611811816117fc565b82525050565b600060208201905061182c6000830184611808565b92915050565b600061ffff82169050919050565b61184981611832565b811461185457600080fd5b50565b60008135905061186681611840565b92915050565b6000806000606084860312156118855761188461176a565b5b600061189386828701611857565b93505060206118a486828701611786565b92505060406118b586828701611786565b9150509250925092565b600082825260208201905092915050565b7f6f776e657220616363657373206f6e6c79000000000000000000000000000000600082015250565b60006119066011836118bf565b9150611911826118d0565b602082019050919050565b60006020820190508181036000830152611935816118f9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061197682611736565b915061198183611736565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119b6576119b561193c565b5b828201905092915050565b60006119cc82611736565b91506119d783611736565b9250828210156119ea576119e961193c565b5b828203905092915050565b7f796f7520617265206e6577206269650000000000000000000000000000000000600082015250565b6000611a2b600f836118bf565b9150611a36826119f5565b602082019050919050565b60006020820190508181036000830152611a5a81611a1e565b9050919050565b7f6e6f7420323420686f7572732070617374000000000000000000000000000000600082015250565b6000611a976011836118bf565b9150611aa282611a61565b602082019050919050565b60006020820190508181036000830152611ac681611a8a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b2782611afc565b9050919050565b611b3781611b1c565b82525050565b6000606082019050611b526000830186611740565b611b5f6020830185611b2e565b611b6c6040830184611740565b949350505050565b7f63616e206e6f742065786368616e6765206e6f772c6c6f7720636f6e7472616360008201527f742062616c616e63652000000000000000000000000000000000000000000000602082015250565b6000611bd0602a836118bf565b9150611bdb82611b74565b604082019050919050565b60006020820190508181036000830152611bff81611bc3565b9050919050565b600081905092915050565b50565b6000611c21600083611c06565b9150611c2c82611c11565b600082019050919050565b6000611c4282611c14565b9150819050919050565b7f7472616e73616374696f6e204661696c65640000000000000000000000000000600082015250565b6000611c826012836118bf565b9150611c8d82611c4c565b602082019050919050565b60006020820190508181036000830152611cb181611c75565b9050919050565b6000606082019050611ccd6000830186611740565b611cda6020830185611740565b611ce76040830184611740565b949350505050565b7f796f7520617265206e6f7420656c696769626c6520666f7220636f6d6d65726360008201527f69616c2066756e64000000000000000000000000000000000000000000000000602082015250565b6000611d4b6028836118bf565b9150611d5682611cef565b604082019050919050565b60006020820190508181036000830152611d7a81611d3e565b9050919050565b7f736f72727920796f752063616e206e6f742063617368206f7574206e6f772c6c60008201527f6f772062616c616e636500000000000000000000000000000000000000000000602082015250565b6000611ddd602a836118bf565b9150611de882611d81565b604082019050919050565b60006020820190508181036000830152611e0c81611dd0565b9050919050565b7f7472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b6000611e496012836118bf565b9150611e5482611e13565b602082019050919050565b60006020820190508181036000830152611e7881611e3c565b9050919050565b7f796f752063616e7420656e746572206865726500000000000000000000000000600082015250565b6000611eb56013836118bf565b9150611ec082611e7f565b602082019050919050565b60006020820190508181036000830152611ee481611ea8565b9050919050565b60008160601b9050919050565b6000611f0382611eeb565b9050919050565b6000611f1582611ef8565b9050919050565b611f2d611f2882611b1c565b611f0a565b82525050565b6000819050919050565b611f4e611f4982611736565b611f33565b82525050565b6000611f608287611f1c565b601482019150611f708286611f3d565b602082019150611f808285611f3d565b602082019150611f908284611f3d565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fdc82611736565b9150611fe783611736565b925082611ff757611ff6611fa2565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061203c82611736565b915061204783611736565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120805761207f61193c565b5b828202905092915050565b600061209682611736565b91506120a183611736565b9250826120b1576120b0611fa2565b5b828204905092915050565b60006120c782611736565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156120fa576120f961193c565b5b60018201905091905056fea2646970667358221220fe7006bbd4afc6bdb0bcd025b0db59e02541a7858162d8fa7854f2a0f68a012764736f6c63430008080033",
  "devdoc": {
    "author": "helloiampratyus",
    "kind": "dev",
    "methods": {},
    "title": "a sample lottery contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "this contract is for creating  untamperable decentralized smart contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "randomAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 45,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "lotteryCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 48,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "lotteryCompletionOwnerTime",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 50,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address_payable"
      },
      {
        "astId": 52,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "s_recentWinner",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 56,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "WinnerIndex",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "lotteryMap",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(lotteryThings)35_storage)"
      },
      {
        "astId": 66,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "s_players",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_array(t_address_payable)dyn_storage)"
      },
      {
        "astId": 70,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "tokenBalance",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 75,
        "contract": "contracts/lottery.sol:RandomLottery",
        "label": "loginManagement",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_struct(login)42_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address_payable)dyn_storage": {
        "base": "t_address_payable",
        "encoding": "dynamic_array",
        "label": "address payable[]",
        "numberOfBytes": "32"
      },
      "t_enum(lotteryState)23": {
        "encoding": "inplace",
        "label": "enum RandomLottery.lotteryState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(login)42_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct RandomLottery.login)",
        "numberOfBytes": "32",
        "value": "t_struct(login)42_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address_payable)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address payable[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address_payable)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(lotteryThings)35_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RandomLottery.lotteryThings)",
        "numberOfBytes": "32",
        "value": "t_struct(lotteryThings)35_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(login)42_storage": {
        "encoding": "inplace",
        "label": "struct RandomLottery.login",
        "members": [
          {
            "astId": 37,
            "contract": "contracts/lottery.sol:RandomLottery",
            "label": "streak",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 39,
            "contract": "contracts/lottery.sol:RandomLottery",
            "label": "s_lastTimeStamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 41,
            "contract": "contracts/lottery.sol:RandomLottery",
            "label": "check_reset",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(lotteryThings)35_storage": {
        "encoding": "inplace",
        "label": "struct RandomLottery.lotteryThings",
        "members": [
          {
            "astId": 25,
            "contract": "contracts/lottery.sol:RandomLottery",
            "label": "s_entranceFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 27,
            "contract": "contracts/lottery.sol:RandomLottery",
            "label": "s_latestTimeStamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 29,
            "contract": "contracts/lottery.sol:RandomLottery",
            "label": "s_interval",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/lottery.sol:RandomLottery",
            "label": "s_lotteryState",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(lotteryState)23"
          },
          {
            "astId": 34,
            "contract": "contracts/lottery.sol:RandomLottery",
            "label": "MinPlayers",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}